{"id":"node_modules/pako/lib/deflate.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\pako\\package.json","includedInParent":true,"mtime":1624384361039},{"name":"./zlib/deflate","loc":{"line":4,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\deflate.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\zlib\\deflate.js"},{"name":"./utils/common","loc":{"line":5,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\deflate.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\utils\\common.js"},{"name":"./utils/strings","loc":{"line":6,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\deflate.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\utils\\strings.js"},{"name":"./zlib/messages","loc":{"line":7,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\deflate.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\zlib\\messages.js"},{"name":"./zlib/zstream","loc":{"line":8,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\deflate.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\zlib\\zstream.js"}],"generated":{"js":"'use strict';\r\n\r\n\r\nvar zlib_deflate = require('./zlib/deflate');\r\nvar utils        = require('./utils/common');\r\nvar strings      = require('./utils/strings');\r\nvar msg          = require('./zlib/messages');\r\nvar ZStream      = require('./zlib/zstream');\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/* Public constants ==========================================================*/\r\n/* ===========================================================================*/\r\n\r\nvar Z_NO_FLUSH      = 0;\r\nvar Z_FINISH        = 4;\r\n\r\nvar Z_OK            = 0;\r\nvar Z_STREAM_END    = 1;\r\nvar Z_SYNC_FLUSH    = 2;\r\n\r\nvar Z_DEFAULT_COMPRESSION = -1;\r\n\r\nvar Z_DEFAULT_STRATEGY    = 0;\r\n\r\nvar Z_DEFLATED  = 8;\r\n\r\n/* ===========================================================================*/\r\n\r\n\r\n/**\r\n * class Deflate\r\n *\r\n * Generic JS-style wrapper for zlib calls. If you don't need\r\n * streaming behaviour - use more simple functions: [[deflate]],\r\n * [[deflateRaw]] and [[gzip]].\r\n **/\r\n\r\n/* internal\r\n * Deflate.chunks -> Array\r\n *\r\n * Chunks of output data, if [[Deflate#onData]] not overridden.\r\n **/\r\n\r\n/**\r\n * Deflate.result -> Uint8Array|Array\r\n *\r\n * Compressed result, generated by default [[Deflate#onData]]\r\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\r\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\r\n * push a chunk with explicit flush (call [[Deflate#push]] with\r\n * `Z_SYNC_FLUSH` param).\r\n **/\r\n\r\n/**\r\n * Deflate.err -> Number\r\n *\r\n * Error code after deflate finished. 0 (Z_OK) on success.\r\n * You will not need it in real life, because deflate errors\r\n * are possible only on wrong options or bad `onData` / `onEnd`\r\n * custom handlers.\r\n **/\r\n\r\n/**\r\n * Deflate.msg -> String\r\n *\r\n * Error message, if [[Deflate.err]] != 0\r\n **/\r\n\r\n\r\n/**\r\n * new Deflate(options)\r\n * - options (Object): zlib deflate options.\r\n *\r\n * Creates new deflator instance with specified params. Throws exception\r\n * on bad params. Supported options:\r\n *\r\n * - `level`\r\n * - `windowBits`\r\n * - `memLevel`\r\n * - `strategy`\r\n * - `dictionary`\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information on these.\r\n *\r\n * Additional options, for internal needs:\r\n *\r\n * - `chunkSize` - size of generated data chunks (16K by default)\r\n * - `raw` (Boolean) - do raw deflate\r\n * - `gzip` (Boolean) - create gzip wrapper\r\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\r\n *    (each char code [0..255])\r\n * - `header` (Object) - custom header for gzip\r\n *   - `text` (Boolean) - true if compressed data believed to be text\r\n *   - `time` (Number) - modification time, unix timestamp\r\n *   - `os` (Number) - operation system code\r\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\r\n *   - `name` (String) - file name (binary string)\r\n *   - `comment` (String) - comment (binary string)\r\n *   - `hcrc` (Boolean) - true if header crc should be added\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\r\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\r\n *\r\n * var deflate = new pako.Deflate({ level: 3});\r\n *\r\n * deflate.push(chunk1, false);\r\n * deflate.push(chunk2, true);  // true -> last chunk\r\n *\r\n * if (deflate.err) { throw new Error(deflate.err); }\r\n *\r\n * console.log(deflate.result);\r\n * ```\r\n **/\r\nfunction Deflate(options) {\r\n  if (!(this instanceof Deflate)) return new Deflate(options);\r\n\r\n  this.options = utils.assign({\r\n    level: Z_DEFAULT_COMPRESSION,\r\n    method: Z_DEFLATED,\r\n    chunkSize: 16384,\r\n    windowBits: 15,\r\n    memLevel: 8,\r\n    strategy: Z_DEFAULT_STRATEGY,\r\n    to: ''\r\n  }, options || {});\r\n\r\n  var opt = this.options;\r\n\r\n  if (opt.raw && (opt.windowBits > 0)) {\r\n    opt.windowBits = -opt.windowBits;\r\n  }\r\n\r\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\r\n    opt.windowBits += 16;\r\n  }\r\n\r\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\r\n  this.msg    = '';     // error message\r\n  this.ended  = false;  // used to avoid multiple onEnd() calls\r\n  this.chunks = [];     // chunks of compressed data\r\n\r\n  this.strm = new ZStream();\r\n  this.strm.avail_out = 0;\r\n\r\n  var status = zlib_deflate.deflateInit2(\r\n    this.strm,\r\n    opt.level,\r\n    opt.method,\r\n    opt.windowBits,\r\n    opt.memLevel,\r\n    opt.strategy\r\n  );\r\n\r\n  if (status !== Z_OK) {\r\n    throw new Error(msg[status]);\r\n  }\r\n\r\n  if (opt.header) {\r\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\r\n  }\r\n\r\n  if (opt.dictionary) {\r\n    var dict;\r\n    // Convert data if needed\r\n    if (typeof opt.dictionary === 'string') {\r\n      // If we need to compress text, change encoding to utf8.\r\n      dict = strings.string2buf(opt.dictionary);\r\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\r\n      dict = new Uint8Array(opt.dictionary);\r\n    } else {\r\n      dict = opt.dictionary;\r\n    }\r\n\r\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\r\n\r\n    if (status !== Z_OK) {\r\n      throw new Error(msg[status]);\r\n    }\r\n\r\n    this._dict_set = true;\r\n  }\r\n}\r\n\r\n/**\r\n * Deflate#push(data[, mode]) -> Boolean\r\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\r\n *   converted to utf8 byte sequence.\r\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\r\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\r\n *\r\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\r\n * new compressed chunks. Returns `true` on success. The last data block must have\r\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\r\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\r\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\r\n *\r\n * On fail call [[Deflate#onEnd]] with error code and return false.\r\n *\r\n * We strongly recommend to use `Uint8Array` on input for best speed (output\r\n * array format is detected automatically). Also, don't skip last param and always\r\n * use the same type in your code (boolean or number). That will improve JS speed.\r\n *\r\n * For regular `Array`-s make sure all elements are [0..255].\r\n *\r\n * ##### Example\r\n *\r\n * ```javascript\r\n * push(chunk, false); // push one of data chunks\r\n * ...\r\n * push(chunk, true);  // push last chunk\r\n * ```\r\n **/\r\nDeflate.prototype.push = function (data, mode) {\r\n  var strm = this.strm;\r\n  var chunkSize = this.options.chunkSize;\r\n  var status, _mode;\r\n\r\n  if (this.ended) { return false; }\r\n\r\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\r\n\r\n  // Convert data if needed\r\n  if (typeof data === 'string') {\r\n    // If we need to compress text, change encoding to utf8.\r\n    strm.input = strings.string2buf(data);\r\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\r\n    strm.input = new Uint8Array(data);\r\n  } else {\r\n    strm.input = data;\r\n  }\r\n\r\n  strm.next_in = 0;\r\n  strm.avail_in = strm.input.length;\r\n\r\n  do {\r\n    if (strm.avail_out === 0) {\r\n      strm.output = new utils.Buf8(chunkSize);\r\n      strm.next_out = 0;\r\n      strm.avail_out = chunkSize;\r\n    }\r\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\r\n\r\n    if (status !== Z_STREAM_END && status !== Z_OK) {\r\n      this.onEnd(status);\r\n      this.ended = true;\r\n      return false;\r\n    }\r\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\r\n      if (this.options.to === 'string') {\r\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\r\n      } else {\r\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\r\n      }\r\n    }\r\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\r\n\r\n  // Finalize on the last chunk.\r\n  if (_mode === Z_FINISH) {\r\n    status = zlib_deflate.deflateEnd(this.strm);\r\n    this.onEnd(status);\r\n    this.ended = true;\r\n    return status === Z_OK;\r\n  }\r\n\r\n  // callback interim results if Z_SYNC_FLUSH.\r\n  if (_mode === Z_SYNC_FLUSH) {\r\n    this.onEnd(Z_OK);\r\n    strm.avail_out = 0;\r\n    return true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * Deflate#onData(chunk) -> Void\r\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\r\n *   on js engine support. When string output requested, each chunk\r\n *   will be string.\r\n *\r\n * By default, stores data blocks in `chunks[]` property and glue\r\n * those in `onEnd`. Override this handler, if you need another behaviour.\r\n **/\r\nDeflate.prototype.onData = function (chunk) {\r\n  this.chunks.push(chunk);\r\n};\r\n\r\n\r\n/**\r\n * Deflate#onEnd(status) -> Void\r\n * - status (Number): deflate status. 0 (Z_OK) on success,\r\n *   other if not.\r\n *\r\n * Called once after you tell deflate that the input stream is\r\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\r\n * or if an error happened. By default - join collected chunks,\r\n * free memory and fill `results` / `err` properties.\r\n **/\r\nDeflate.prototype.onEnd = function (status) {\r\n  // On success - join\r\n  if (status === Z_OK) {\r\n    if (this.options.to === 'string') {\r\n      this.result = this.chunks.join('');\r\n    } else {\r\n      this.result = utils.flattenChunks(this.chunks);\r\n    }\r\n  }\r\n  this.chunks = [];\r\n  this.err = status;\r\n  this.msg = this.strm.msg;\r\n};\r\n\r\n\r\n/**\r\n * deflate(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to compress.\r\n * - options (Object): zlib deflate options.\r\n *\r\n * Compress `data` with deflate algorithm and `options`.\r\n *\r\n * Supported options are:\r\n *\r\n * - level\r\n * - windowBits\r\n * - memLevel\r\n * - strategy\r\n * - dictionary\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information on these.\r\n *\r\n * Sugar (options):\r\n *\r\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\r\n *   negative windowBits implicitly.\r\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\r\n *    (each char code [0..255])\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\r\n *\r\n * console.log(pako.deflate(data));\r\n * ```\r\n **/\r\nfunction deflate(input, options) {\r\n  var deflator = new Deflate(options);\r\n\r\n  deflator.push(input, true);\r\n\r\n  // That will never happens, if you don't cheat with options :)\r\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\r\n\r\n  return deflator.result;\r\n}\r\n\r\n\r\n/**\r\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to compress.\r\n * - options (Object): zlib deflate options.\r\n *\r\n * The same as [[deflate]], but creates raw data, without wrapper\r\n * (header and adler32 crc).\r\n **/\r\nfunction deflateRaw(input, options) {\r\n  options = options || {};\r\n  options.raw = true;\r\n  return deflate(input, options);\r\n}\r\n\r\n\r\n/**\r\n * gzip(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to compress.\r\n * - options (Object): zlib deflate options.\r\n *\r\n * The same as [[deflate]], but create gzip wrapper instead of\r\n * deflate one.\r\n **/\r\nfunction gzip(input, options) {\r\n  options = options || {};\r\n  options.gzip = true;\r\n  return deflate(input, options);\r\n}\r\n\r\n\r\nexports.Deflate = Deflate;\r\nexports.deflate = deflate;\r\nexports.deflateRaw = deflateRaw;\r\nexports.gzip = gzip;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pako/lib/deflate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/pako/lib/deflate.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}}],"sources":{"node_modules/pako/lib/deflate.js":"'use strict';\r\n\r\n\r\nvar zlib_deflate = require('./zlib/deflate');\r\nvar utils        = require('./utils/common');\r\nvar strings      = require('./utils/strings');\r\nvar msg          = require('./zlib/messages');\r\nvar ZStream      = require('./zlib/zstream');\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/* Public constants ==========================================================*/\r\n/* ===========================================================================*/\r\n\r\nvar Z_NO_FLUSH      = 0;\r\nvar Z_FINISH        = 4;\r\n\r\nvar Z_OK            = 0;\r\nvar Z_STREAM_END    = 1;\r\nvar Z_SYNC_FLUSH    = 2;\r\n\r\nvar Z_DEFAULT_COMPRESSION = -1;\r\n\r\nvar Z_DEFAULT_STRATEGY    = 0;\r\n\r\nvar Z_DEFLATED  = 8;\r\n\r\n/* ===========================================================================*/\r\n\r\n\r\n/**\r\n * class Deflate\r\n *\r\n * Generic JS-style wrapper for zlib calls. If you don't need\r\n * streaming behaviour - use more simple functions: [[deflate]],\r\n * [[deflateRaw]] and [[gzip]].\r\n **/\r\n\r\n/* internal\r\n * Deflate.chunks -> Array\r\n *\r\n * Chunks of output data, if [[Deflate#onData]] not overridden.\r\n **/\r\n\r\n/**\r\n * Deflate.result -> Uint8Array|Array\r\n *\r\n * Compressed result, generated by default [[Deflate#onData]]\r\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\r\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\r\n * push a chunk with explicit flush (call [[Deflate#push]] with\r\n * `Z_SYNC_FLUSH` param).\r\n **/\r\n\r\n/**\r\n * Deflate.err -> Number\r\n *\r\n * Error code after deflate finished. 0 (Z_OK) on success.\r\n * You will not need it in real life, because deflate errors\r\n * are possible only on wrong options or bad `onData` / `onEnd`\r\n * custom handlers.\r\n **/\r\n\r\n/**\r\n * Deflate.msg -> String\r\n *\r\n * Error message, if [[Deflate.err]] != 0\r\n **/\r\n\r\n\r\n/**\r\n * new Deflate(options)\r\n * - options (Object): zlib deflate options.\r\n *\r\n * Creates new deflator instance with specified params. Throws exception\r\n * on bad params. Supported options:\r\n *\r\n * - `level`\r\n * - `windowBits`\r\n * - `memLevel`\r\n * - `strategy`\r\n * - `dictionary`\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information on these.\r\n *\r\n * Additional options, for internal needs:\r\n *\r\n * - `chunkSize` - size of generated data chunks (16K by default)\r\n * - `raw` (Boolean) - do raw deflate\r\n * - `gzip` (Boolean) - create gzip wrapper\r\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\r\n *    (each char code [0..255])\r\n * - `header` (Object) - custom header for gzip\r\n *   - `text` (Boolean) - true if compressed data believed to be text\r\n *   - `time` (Number) - modification time, unix timestamp\r\n *   - `os` (Number) - operation system code\r\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\r\n *   - `name` (String) - file name (binary string)\r\n *   - `comment` (String) - comment (binary string)\r\n *   - `hcrc` (Boolean) - true if header crc should be added\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\r\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\r\n *\r\n * var deflate = new pako.Deflate({ level: 3});\r\n *\r\n * deflate.push(chunk1, false);\r\n * deflate.push(chunk2, true);  // true -> last chunk\r\n *\r\n * if (deflate.err) { throw new Error(deflate.err); }\r\n *\r\n * console.log(deflate.result);\r\n * ```\r\n **/\r\nfunction Deflate(options) {\r\n  if (!(this instanceof Deflate)) return new Deflate(options);\r\n\r\n  this.options = utils.assign({\r\n    level: Z_DEFAULT_COMPRESSION,\r\n    method: Z_DEFLATED,\r\n    chunkSize: 16384,\r\n    windowBits: 15,\r\n    memLevel: 8,\r\n    strategy: Z_DEFAULT_STRATEGY,\r\n    to: ''\r\n  }, options || {});\r\n\r\n  var opt = this.options;\r\n\r\n  if (opt.raw && (opt.windowBits > 0)) {\r\n    opt.windowBits = -opt.windowBits;\r\n  }\r\n\r\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\r\n    opt.windowBits += 16;\r\n  }\r\n\r\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\r\n  this.msg    = '';     // error message\r\n  this.ended  = false;  // used to avoid multiple onEnd() calls\r\n  this.chunks = [];     // chunks of compressed data\r\n\r\n  this.strm = new ZStream();\r\n  this.strm.avail_out = 0;\r\n\r\n  var status = zlib_deflate.deflateInit2(\r\n    this.strm,\r\n    opt.level,\r\n    opt.method,\r\n    opt.windowBits,\r\n    opt.memLevel,\r\n    opt.strategy\r\n  );\r\n\r\n  if (status !== Z_OK) {\r\n    throw new Error(msg[status]);\r\n  }\r\n\r\n  if (opt.header) {\r\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\r\n  }\r\n\r\n  if (opt.dictionary) {\r\n    var dict;\r\n    // Convert data if needed\r\n    if (typeof opt.dictionary === 'string') {\r\n      // If we need to compress text, change encoding to utf8.\r\n      dict = strings.string2buf(opt.dictionary);\r\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\r\n      dict = new Uint8Array(opt.dictionary);\r\n    } else {\r\n      dict = opt.dictionary;\r\n    }\r\n\r\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\r\n\r\n    if (status !== Z_OK) {\r\n      throw new Error(msg[status]);\r\n    }\r\n\r\n    this._dict_set = true;\r\n  }\r\n}\r\n\r\n/**\r\n * Deflate#push(data[, mode]) -> Boolean\r\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\r\n *   converted to utf8 byte sequence.\r\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\r\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\r\n *\r\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\r\n * new compressed chunks. Returns `true` on success. The last data block must have\r\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\r\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\r\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\r\n *\r\n * On fail call [[Deflate#onEnd]] with error code and return false.\r\n *\r\n * We strongly recommend to use `Uint8Array` on input for best speed (output\r\n * array format is detected automatically). Also, don't skip last param and always\r\n * use the same type in your code (boolean or number). That will improve JS speed.\r\n *\r\n * For regular `Array`-s make sure all elements are [0..255].\r\n *\r\n * ##### Example\r\n *\r\n * ```javascript\r\n * push(chunk, false); // push one of data chunks\r\n * ...\r\n * push(chunk, true);  // push last chunk\r\n * ```\r\n **/\r\nDeflate.prototype.push = function (data, mode) {\r\n  var strm = this.strm;\r\n  var chunkSize = this.options.chunkSize;\r\n  var status, _mode;\r\n\r\n  if (this.ended) { return false; }\r\n\r\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\r\n\r\n  // Convert data if needed\r\n  if (typeof data === 'string') {\r\n    // If we need to compress text, change encoding to utf8.\r\n    strm.input = strings.string2buf(data);\r\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\r\n    strm.input = new Uint8Array(data);\r\n  } else {\r\n    strm.input = data;\r\n  }\r\n\r\n  strm.next_in = 0;\r\n  strm.avail_in = strm.input.length;\r\n\r\n  do {\r\n    if (strm.avail_out === 0) {\r\n      strm.output = new utils.Buf8(chunkSize);\r\n      strm.next_out = 0;\r\n      strm.avail_out = chunkSize;\r\n    }\r\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\r\n\r\n    if (status !== Z_STREAM_END && status !== Z_OK) {\r\n      this.onEnd(status);\r\n      this.ended = true;\r\n      return false;\r\n    }\r\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\r\n      if (this.options.to === 'string') {\r\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\r\n      } else {\r\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\r\n      }\r\n    }\r\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\r\n\r\n  // Finalize on the last chunk.\r\n  if (_mode === Z_FINISH) {\r\n    status = zlib_deflate.deflateEnd(this.strm);\r\n    this.onEnd(status);\r\n    this.ended = true;\r\n    return status === Z_OK;\r\n  }\r\n\r\n  // callback interim results if Z_SYNC_FLUSH.\r\n  if (_mode === Z_SYNC_FLUSH) {\r\n    this.onEnd(Z_OK);\r\n    strm.avail_out = 0;\r\n    return true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * Deflate#onData(chunk) -> Void\r\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\r\n *   on js engine support. When string output requested, each chunk\r\n *   will be string.\r\n *\r\n * By default, stores data blocks in `chunks[]` property and glue\r\n * those in `onEnd`. Override this handler, if you need another behaviour.\r\n **/\r\nDeflate.prototype.onData = function (chunk) {\r\n  this.chunks.push(chunk);\r\n};\r\n\r\n\r\n/**\r\n * Deflate#onEnd(status) -> Void\r\n * - status (Number): deflate status. 0 (Z_OK) on success,\r\n *   other if not.\r\n *\r\n * Called once after you tell deflate that the input stream is\r\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\r\n * or if an error happened. By default - join collected chunks,\r\n * free memory and fill `results` / `err` properties.\r\n **/\r\nDeflate.prototype.onEnd = function (status) {\r\n  // On success - join\r\n  if (status === Z_OK) {\r\n    if (this.options.to === 'string') {\r\n      this.result = this.chunks.join('');\r\n    } else {\r\n      this.result = utils.flattenChunks(this.chunks);\r\n    }\r\n  }\r\n  this.chunks = [];\r\n  this.err = status;\r\n  this.msg = this.strm.msg;\r\n};\r\n\r\n\r\n/**\r\n * deflate(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to compress.\r\n * - options (Object): zlib deflate options.\r\n *\r\n * Compress `data` with deflate algorithm and `options`.\r\n *\r\n * Supported options are:\r\n *\r\n * - level\r\n * - windowBits\r\n * - memLevel\r\n * - strategy\r\n * - dictionary\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information on these.\r\n *\r\n * Sugar (options):\r\n *\r\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\r\n *   negative windowBits implicitly.\r\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\r\n *    (each char code [0..255])\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\r\n *\r\n * console.log(pako.deflate(data));\r\n * ```\r\n **/\r\nfunction deflate(input, options) {\r\n  var deflator = new Deflate(options);\r\n\r\n  deflator.push(input, true);\r\n\r\n  // That will never happens, if you don't cheat with options :)\r\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\r\n\r\n  return deflator.result;\r\n}\r\n\r\n\r\n/**\r\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to compress.\r\n * - options (Object): zlib deflate options.\r\n *\r\n * The same as [[deflate]], but creates raw data, without wrapper\r\n * (header and adler32 crc).\r\n **/\r\nfunction deflateRaw(input, options) {\r\n  options = options || {};\r\n  options.raw = true;\r\n  return deflate(input, options);\r\n}\r\n\r\n\r\n/**\r\n * gzip(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to compress.\r\n * - options (Object): zlib deflate options.\r\n *\r\n * The same as [[deflate]], but create gzip wrapper instead of\r\n * deflate one.\r\n **/\r\nfunction gzip(input, options) {\r\n  options = options || {};\r\n  options.gzip = true;\r\n  return deflate(input, options);\r\n}\r\n\r\n\r\nexports.Deflate = Deflate;\r\nexports.deflate = deflate;\r\nexports.deflateRaw = deflateRaw;\r\nexports.gzip = gzip;\r\n"},"lineCount":401}},"error":null,"hash":"3fd9f284e2610217414fec3b655f47ca","cacheData":{"env":{}}}