{"id":"node_modules/node-jose/lib/algorithms/aes-kw.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\package.json","includedInParent":true,"mtime":1624384360737},{"name":"./helpers.js","loc":{"line":8,"column":22},"parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\aes-kw.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\helpers.js"},{"name":"../deps/forge.js","loc":{"line":9,"column":20},"parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\aes-kw.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\deps\\forge.js"},{"name":"../util/databuffer.js","loc":{"line":10,"column":25},"parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\aes-kw.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\util\\databuffer.js"},{"name":"buffer","parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\aes-kw.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-libs-browser\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*!\r\n * algorithms/aes-kw.js - AES-KW Key-Wrapping\r\n *\r\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\r\n */\r\n\"use strict\";\r\n\r\nvar helpers = require(\"./helpers.js\"),\r\n    forge = require(\"../deps/forge.js\"),\r\n    DataBuffer = require(\"../util/databuffer.js\");\r\n\r\nvar A0 = Buffer.from(\"a6a6a6a6a6a6a6a6\", \"hex\");\r\n\r\n// ### helpers\r\nfunction xor(a, b) {\r\n  var len = Math.max(a.length, b.length);\r\n  var result = Buffer.alloc(len);\r\n  for (var idx = 0; len > idx; idx++) {\r\n    result[idx] = (a[idx] || 0) ^ (b[idx] || 0);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction split(input, size) {\r\n  var output = [];\r\n  for (var idx = 0; input.length > idx; idx += size) {\r\n    output.push(input.slice(idx, idx + size));\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction longToBigEndian(input) {\r\n  var hi = Math.floor(input / 4294967296),\r\n      lo = input % 4294967296;\r\n  var output = Buffer.alloc(8);\r\n  output[0] = 0xff & (hi >>> 24);\r\n  output[1] = 0xff & (hi >>> 16);\r\n  output[2] = 0xff & (hi >>> 8);\r\n  output[3] = 0xff & (hi >>> 0);\r\n  output[4] = 0xff & (lo >>> 24);\r\n  output[5] = 0xff & (lo >>> 16);\r\n  output[6] = 0xff & (lo >>> 8);\r\n  output[7] = 0xff & (lo >>> 0);\r\n  return output;\r\n}\r\n\r\nfunction kwEncryptFN(size) {\r\n  function commonChecks(key, data) {\r\n    if (size !== (key.length << 3)) {\r\n      throw new Error(\"invalid key size\");\r\n    }\r\n    if (0 < data.length && 0 !== (data.length % 8)) {\r\n      throw new Error(\"invalid data length\");\r\n    }\r\n  }\r\n\r\n  // ### 'fallback' implementation -- uses forge\r\n  var fallback = function(key, pdata) {\r\n    try {\r\n      commonChecks(key, pdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // setup cipher\r\n    var cipher = forge.cipher.createCipher(\"AES\", new DataBuffer(key));\r\n\r\n    // split input into chunks\r\n    var R = split(pdata, 8);\r\n    var A,\r\n        B,\r\n        count;\r\n    A = A0;\r\n    for (var jdx = 0; 6 > jdx; jdx++) {\r\n      for (var idx = 0; R.length > idx; idx++) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = Buffer.concat([A, R[idx]]);\r\n        cipher.start();\r\n        cipher.update(new DataBuffer(B));\r\n        cipher.finish();\r\n        B = Buffer.from(cipher.output.bytes(), \"binary\");\r\n\r\n        A = xor(B.slice(0, 8),\r\n                longToBigEndian(count));\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    R = [A].concat(R);\r\n    var cdata = Buffer.concat(R);\r\n    return Promise.resolve({\r\n      data: cdata\r\n    });\r\n  };\r\n  // ### WebCryptoAPI implementation\r\n  var webcrypto = function(key, pdata) {\r\n    try {\r\n      commonChecks(key, pdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    var alg = {\r\n      name: \"AES-KW\"\r\n    };\r\n    var promise = [\r\n      helpers.subtleCrypto.importKey(\"raw\", pdata, { name: \"HMAC\", hash: \"SHA-256\" }, true, [\"sign\"]),\r\n      helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"wrapKey\"])\r\n    ];\r\n    promise = Promise.all(promise);\r\n    promise = promise.then(function(keys) {\r\n      return helpers.subtleCrypto.wrapKey(\"raw\",\r\n                                          keys[0], // key\r\n                                          keys[1], // wrappingKey\r\n                                          alg);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      result = Buffer.from(result);\r\n\r\n      return {\r\n        data: result\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n  var node = function(key, pdata) {\r\n    try {\r\n      commonChecks(key, pdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // split input into chunks\r\n    var R = split(pdata, 8),\r\n        iv = Buffer.alloc(16);\r\n    var A,\r\n        B,\r\n        count;\r\n    A = A0;\r\n    for (var jdx = 0; 6 > jdx; jdx++) {\r\n      for (var idx = 0; R.length > idx; idx++) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = Buffer.concat([A, R[idx]]);\r\n        var cipher = helpers.nodeCrypto.createCipheriv(\"AES\" + size, key, iv);\r\n        B = cipher.update(B);\r\n\r\n        A = xor(B.slice(0, 8),\r\n                longToBigEndian(count));\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    R = [A].concat(R);\r\n    var cdata = Buffer.concat(R);\r\n    return Promise.resolve({\r\n      data: cdata\r\n    });\r\n  };\r\n\r\n  return helpers.setupFallback(node, webcrypto, fallback);\r\n}\r\nfunction kwDecryptFN(size) {\r\n  function commonChecks(key, data) {\r\n    if (size !== (key.length << 3)) {\r\n      throw new Error(\"invalid key size\");\r\n    }\r\n    if (0 < (data.length - 8) && 0 !== (data.length % 8)) {\r\n      throw new Error(\"invalid data length\");\r\n    }\r\n  }\r\n\r\n  // ### 'fallback' implementation -- uses forge\r\n  var fallback = function(key, cdata) {\r\n    try {\r\n      commonChecks(key, cdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // setup cipher\r\n    var cipher = forge.cipher.createDecipher(\"AES\", new DataBuffer(key));\r\n\r\n    // prepare inputs\r\n    var R = split(cdata, 8),\r\n        A,\r\n        B,\r\n        count;\r\n    A = R[0];\r\n    R = R.slice(1);\r\n    for (var jdx = 5; 0 <= jdx; --jdx) {\r\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = xor(A,\r\n                longToBigEndian(count));\r\n        B = Buffer.concat([B, R[idx]]);\r\n        cipher.start();\r\n        cipher.update(new DataBuffer(B));\r\n        cipher.finish();\r\n        B = Buffer.from(cipher.output.bytes(), \"binary\");\r\n\r\n        A = B.slice(0, 8);\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    if (A.toString() !== A0.toString()) {\r\n      return Promise.reject(new Error(\"decryption failed\"));\r\n    }\r\n    var pdata = Buffer.concat(R);\r\n    return Promise.resolve(pdata);\r\n  };\r\n  // ### WebCryptoAPI implementation\r\n  var webcrypto = function(key, cdata) {\r\n    try {\r\n      commonChecks(key, cdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    var alg = {\r\n      name: \"AES-KW\"\r\n    };\r\n    var promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"unwrapKey\"]);\r\n    promise = promise.then(function(key) {\r\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, alg, {name: \"HMAC\", hash: \"SHA-256\"}, true, [\"sign\"]);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      // unwrapped CryptoKey -- extract raw\r\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      result = Buffer.from(result);\r\n      return result;\r\n    });\r\n    return promise;\r\n  };\r\n  var node = function(key, cdata) {\r\n    try {\r\n      commonChecks(key, cdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // prepare inputs\r\n    var R = split(cdata, 8),\r\n        iv = Buffer.alloc(16),\r\n        A,\r\n        B,\r\n        count;\r\n    A = R[0];\r\n    R = R.slice(1);\r\n    for (var jdx = 5; 0 <= jdx; --jdx) {\r\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = xor(A,\r\n                longToBigEndian(count));\r\n        B = Buffer.concat([B, R[idx], iv]);\r\n        var cipher = helpers.nodeCrypto.createDecipheriv(\"AES\" + size, key, iv);\r\n        B = cipher.update(B);\r\n\r\n        A = B.slice(0, 8);\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    if (A.toString() !== A0.toString()) {\r\n      return Promise.reject(new Error(\"decryption failed\"));\r\n    }\r\n    var pdata = Buffer.concat(R);\r\n    return Promise.resolve(pdata);\r\n  };\r\n\r\n  return helpers.setupFallback(node, webcrypto, fallback);\r\n}\r\n\r\n// ### Public API\r\n// * [name].encrypt\r\n// * [name].decrypt\r\nvar aesKw = {};\r\n[\r\n  \"A128KW\",\r\n  \"A192KW\",\r\n  \"A256KW\"\r\n].forEach(function(alg) {\r\n  var size = parseInt(/A(\\d+)KW/g.exec(alg)[1]);\r\n  aesKw[alg] = {\r\n    encrypt: kwEncryptFN(size),\r\n    decrypt: kwDecryptFN(size)\r\n  };\r\n});\r\n\r\nmodule.exports = aesKw;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/aes-kw.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}}],"sources":{"node_modules/node-jose/lib/algorithms/aes-kw.js":"/*!\r\n * algorithms/aes-kw.js - AES-KW Key-Wrapping\r\n *\r\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\r\n */\r\n\"use strict\";\r\n\r\nvar helpers = require(\"./helpers.js\"),\r\n    forge = require(\"../deps/forge.js\"),\r\n    DataBuffer = require(\"../util/databuffer.js\");\r\n\r\nvar A0 = Buffer.from(\"a6a6a6a6a6a6a6a6\", \"hex\");\r\n\r\n// ### helpers\r\nfunction xor(a, b) {\r\n  var len = Math.max(a.length, b.length);\r\n  var result = Buffer.alloc(len);\r\n  for (var idx = 0; len > idx; idx++) {\r\n    result[idx] = (a[idx] || 0) ^ (b[idx] || 0);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction split(input, size) {\r\n  var output = [];\r\n  for (var idx = 0; input.length > idx; idx += size) {\r\n    output.push(input.slice(idx, idx + size));\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction longToBigEndian(input) {\r\n  var hi = Math.floor(input / 4294967296),\r\n      lo = input % 4294967296;\r\n  var output = Buffer.alloc(8);\r\n  output[0] = 0xff & (hi >>> 24);\r\n  output[1] = 0xff & (hi >>> 16);\r\n  output[2] = 0xff & (hi >>> 8);\r\n  output[3] = 0xff & (hi >>> 0);\r\n  output[4] = 0xff & (lo >>> 24);\r\n  output[5] = 0xff & (lo >>> 16);\r\n  output[6] = 0xff & (lo >>> 8);\r\n  output[7] = 0xff & (lo >>> 0);\r\n  return output;\r\n}\r\n\r\nfunction kwEncryptFN(size) {\r\n  function commonChecks(key, data) {\r\n    if (size !== (key.length << 3)) {\r\n      throw new Error(\"invalid key size\");\r\n    }\r\n    if (0 < data.length && 0 !== (data.length % 8)) {\r\n      throw new Error(\"invalid data length\");\r\n    }\r\n  }\r\n\r\n  // ### 'fallback' implementation -- uses forge\r\n  var fallback = function(key, pdata) {\r\n    try {\r\n      commonChecks(key, pdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // setup cipher\r\n    var cipher = forge.cipher.createCipher(\"AES\", new DataBuffer(key));\r\n\r\n    // split input into chunks\r\n    var R = split(pdata, 8);\r\n    var A,\r\n        B,\r\n        count;\r\n    A = A0;\r\n    for (var jdx = 0; 6 > jdx; jdx++) {\r\n      for (var idx = 0; R.length > idx; idx++) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = Buffer.concat([A, R[idx]]);\r\n        cipher.start();\r\n        cipher.update(new DataBuffer(B));\r\n        cipher.finish();\r\n        B = Buffer.from(cipher.output.bytes(), \"binary\");\r\n\r\n        A = xor(B.slice(0, 8),\r\n                longToBigEndian(count));\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    R = [A].concat(R);\r\n    var cdata = Buffer.concat(R);\r\n    return Promise.resolve({\r\n      data: cdata\r\n    });\r\n  };\r\n  // ### WebCryptoAPI implementation\r\n  var webcrypto = function(key, pdata) {\r\n    try {\r\n      commonChecks(key, pdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    var alg = {\r\n      name: \"AES-KW\"\r\n    };\r\n    var promise = [\r\n      helpers.subtleCrypto.importKey(\"raw\", pdata, { name: \"HMAC\", hash: \"SHA-256\" }, true, [\"sign\"]),\r\n      helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"wrapKey\"])\r\n    ];\r\n    promise = Promise.all(promise);\r\n    promise = promise.then(function(keys) {\r\n      return helpers.subtleCrypto.wrapKey(\"raw\",\r\n                                          keys[0], // key\r\n                                          keys[1], // wrappingKey\r\n                                          alg);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      result = Buffer.from(result);\r\n\r\n      return {\r\n        data: result\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n  var node = function(key, pdata) {\r\n    try {\r\n      commonChecks(key, pdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // split input into chunks\r\n    var R = split(pdata, 8),\r\n        iv = Buffer.alloc(16);\r\n    var A,\r\n        B,\r\n        count;\r\n    A = A0;\r\n    for (var jdx = 0; 6 > jdx; jdx++) {\r\n      for (var idx = 0; R.length > idx; idx++) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = Buffer.concat([A, R[idx]]);\r\n        var cipher = helpers.nodeCrypto.createCipheriv(\"AES\" + size, key, iv);\r\n        B = cipher.update(B);\r\n\r\n        A = xor(B.slice(0, 8),\r\n                longToBigEndian(count));\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    R = [A].concat(R);\r\n    var cdata = Buffer.concat(R);\r\n    return Promise.resolve({\r\n      data: cdata\r\n    });\r\n  };\r\n\r\n  return helpers.setupFallback(node, webcrypto, fallback);\r\n}\r\nfunction kwDecryptFN(size) {\r\n  function commonChecks(key, data) {\r\n    if (size !== (key.length << 3)) {\r\n      throw new Error(\"invalid key size\");\r\n    }\r\n    if (0 < (data.length - 8) && 0 !== (data.length % 8)) {\r\n      throw new Error(\"invalid data length\");\r\n    }\r\n  }\r\n\r\n  // ### 'fallback' implementation -- uses forge\r\n  var fallback = function(key, cdata) {\r\n    try {\r\n      commonChecks(key, cdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // setup cipher\r\n    var cipher = forge.cipher.createDecipher(\"AES\", new DataBuffer(key));\r\n\r\n    // prepare inputs\r\n    var R = split(cdata, 8),\r\n        A,\r\n        B,\r\n        count;\r\n    A = R[0];\r\n    R = R.slice(1);\r\n    for (var jdx = 5; 0 <= jdx; --jdx) {\r\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = xor(A,\r\n                longToBigEndian(count));\r\n        B = Buffer.concat([B, R[idx]]);\r\n        cipher.start();\r\n        cipher.update(new DataBuffer(B));\r\n        cipher.finish();\r\n        B = Buffer.from(cipher.output.bytes(), \"binary\");\r\n\r\n        A = B.slice(0, 8);\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    if (A.toString() !== A0.toString()) {\r\n      return Promise.reject(new Error(\"decryption failed\"));\r\n    }\r\n    var pdata = Buffer.concat(R);\r\n    return Promise.resolve(pdata);\r\n  };\r\n  // ### WebCryptoAPI implementation\r\n  var webcrypto = function(key, cdata) {\r\n    try {\r\n      commonChecks(key, cdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    var alg = {\r\n      name: \"AES-KW\"\r\n    };\r\n    var promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"unwrapKey\"]);\r\n    promise = promise.then(function(key) {\r\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, alg, {name: \"HMAC\", hash: \"SHA-256\"}, true, [\"sign\"]);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      // unwrapped CryptoKey -- extract raw\r\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      result = Buffer.from(result);\r\n      return result;\r\n    });\r\n    return promise;\r\n  };\r\n  var node = function(key, cdata) {\r\n    try {\r\n      commonChecks(key, cdata);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    // prepare inputs\r\n    var R = split(cdata, 8),\r\n        iv = Buffer.alloc(16),\r\n        A,\r\n        B,\r\n        count;\r\n    A = R[0];\r\n    R = R.slice(1);\r\n    for (var jdx = 5; 0 <= jdx; --jdx) {\r\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\r\n        count = (R.length * jdx) + idx + 1;\r\n        B = xor(A,\r\n                longToBigEndian(count));\r\n        B = Buffer.concat([B, R[idx], iv]);\r\n        var cipher = helpers.nodeCrypto.createDecipheriv(\"AES\" + size, key, iv);\r\n        B = cipher.update(B);\r\n\r\n        A = B.slice(0, 8);\r\n        R[idx] = B.slice(8, 16);\r\n      }\r\n    }\r\n    if (A.toString() !== A0.toString()) {\r\n      return Promise.reject(new Error(\"decryption failed\"));\r\n    }\r\n    var pdata = Buffer.concat(R);\r\n    return Promise.resolve(pdata);\r\n  };\r\n\r\n  return helpers.setupFallback(node, webcrypto, fallback);\r\n}\r\n\r\n// ### Public API\r\n// * [name].encrypt\r\n// * [name].decrypt\r\nvar aesKw = {};\r\n[\r\n  \"A128KW\",\r\n  \"A192KW\",\r\n  \"A256KW\"\r\n].forEach(function(alg) {\r\n  var size = parseInt(/A(\\d+)KW/g.exec(alg)[1]);\r\n  aesKw[alg] = {\r\n    encrypt: kwEncryptFN(size),\r\n    decrypt: kwDecryptFN(size)\r\n  };\r\n});\r\n\r\nmodule.exports = aesKw;\r\n"},"lineCount":290}},"error":null,"hash":"988122fc85d4353ad9f53e7ce4fa22c0","cacheData":{"env":{}}}