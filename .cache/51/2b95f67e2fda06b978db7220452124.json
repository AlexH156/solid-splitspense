{"id":"node_modules/lodash/_baseIntersection.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1624384360482},{"name":"./_SetCache","loc":{"line":1,"column":23},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseIntersection.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_SetCache.js"},{"name":"./_arrayIncludes","loc":{"line":2,"column":28},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseIntersection.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_arrayIncludes.js"},{"name":"./_arrayIncludesWith","loc":{"line":3,"column":32},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseIntersection.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_arrayIncludesWith.js"},{"name":"./_arrayMap","loc":{"line":4,"column":23},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseIntersection.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_arrayMap.js"},{"name":"./_baseUnary","loc":{"line":5,"column":24},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseIntersection.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseUnary.js"},{"name":"./_cacheHas","loc":{"line":6,"column":23},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseIntersection.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_cacheHas.js"}],"generated":{"js":"var SetCache = require('./_SetCache'),\r\n    arrayIncludes = require('./_arrayIncludes'),\r\n    arrayIncludesWith = require('./_arrayIncludesWith'),\r\n    arrayMap = require('./_arrayMap'),\r\n    baseUnary = require('./_baseUnary'),\r\n    cacheHas = require('./_cacheHas');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * The base implementation of methods like `_.intersection`, without support\r\n * for iteratee shorthands, that accepts an array of arrays to inspect.\r\n *\r\n * @private\r\n * @param {Array} arrays The arrays to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of shared values.\r\n */\r\nfunction baseIntersection(arrays, iteratee, comparator) {\r\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\r\n      length = arrays[0].length,\r\n      othLength = arrays.length,\r\n      othIndex = othLength,\r\n      caches = Array(othLength),\r\n      maxLength = Infinity,\r\n      result = [];\r\n\r\n  while (othIndex--) {\r\n    var array = arrays[othIndex];\r\n    if (othIndex && iteratee) {\r\n      array = arrayMap(array, baseUnary(iteratee));\r\n    }\r\n    maxLength = nativeMin(array.length, maxLength);\r\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\r\n      ? new SetCache(othIndex && array)\r\n      : undefined;\r\n  }\r\n  array = arrays[0];\r\n\r\n  var index = -1,\r\n      seen = caches[0];\r\n\r\n  outer:\r\n  while (++index < length && result.length < maxLength) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (!(seen\r\n          ? cacheHas(seen, computed)\r\n          : includes(result, computed, comparator)\r\n        )) {\r\n      othIndex = othLength;\r\n      while (--othIndex) {\r\n        var cache = caches[othIndex];\r\n        if (!(cache\r\n              ? cacheHas(cache, computed)\r\n              : includes(arrays[othIndex], computed, comparator))\r\n            ) {\r\n          continue outer;\r\n        }\r\n      }\r\n      if (seen) {\r\n        seen.push(computed);\r\n      }\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseIntersection;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/lodash/_baseIntersection.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/lodash/_baseIntersection.js":"var SetCache = require('./_SetCache'),\r\n    arrayIncludes = require('./_arrayIncludes'),\r\n    arrayIncludesWith = require('./_arrayIncludesWith'),\r\n    arrayMap = require('./_arrayMap'),\r\n    baseUnary = require('./_baseUnary'),\r\n    cacheHas = require('./_cacheHas');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * The base implementation of methods like `_.intersection`, without support\r\n * for iteratee shorthands, that accepts an array of arrays to inspect.\r\n *\r\n * @private\r\n * @param {Array} arrays The arrays to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of shared values.\r\n */\r\nfunction baseIntersection(arrays, iteratee, comparator) {\r\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\r\n      length = arrays[0].length,\r\n      othLength = arrays.length,\r\n      othIndex = othLength,\r\n      caches = Array(othLength),\r\n      maxLength = Infinity,\r\n      result = [];\r\n\r\n  while (othIndex--) {\r\n    var array = arrays[othIndex];\r\n    if (othIndex && iteratee) {\r\n      array = arrayMap(array, baseUnary(iteratee));\r\n    }\r\n    maxLength = nativeMin(array.length, maxLength);\r\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\r\n      ? new SetCache(othIndex && array)\r\n      : undefined;\r\n  }\r\n  array = arrays[0];\r\n\r\n  var index = -1,\r\n      seen = caches[0];\r\n\r\n  outer:\r\n  while (++index < length && result.length < maxLength) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (!(seen\r\n          ? cacheHas(seen, computed)\r\n          : includes(result, computed, comparator)\r\n        )) {\r\n      othIndex = othLength;\r\n      while (--othIndex) {\r\n        var cache = caches[othIndex];\r\n        if (!(cache\r\n              ? cacheHas(cache, computed)\r\n              : includes(arrays[othIndex], computed, comparator))\r\n            ) {\r\n          continue outer;\r\n        }\r\n      }\r\n      if (seen) {\r\n        seen.push(computed);\r\n      }\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseIntersection;\r\n"},"lineCount":75}},"error":null,"hash":"94a2406acecb62ee7442288b01ef1ed6","cacheData":{"env":{}}}