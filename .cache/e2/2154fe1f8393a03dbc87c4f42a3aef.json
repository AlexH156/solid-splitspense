{"id":"node_modules/pako/lib/utils/strings.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\pako\\package.json","includedInParent":true,"mtime":1624384361039},{"name":"./common","loc":{"line":5,"column":20},"parent":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\utils\\strings.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\pako\\lib\\utils\\common.js"}],"generated":{"js":"// String encode/decode helpers\r\n'use strict';\r\n\r\n\r\nvar utils = require('./common');\r\n\r\n\r\n// Quick check if we can use fast array to bin string conversion\r\n//\r\n// - apply(Array) can fail on Android 2.2\r\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\r\n//\r\nvar STR_APPLY_OK = true;\r\nvar STR_APPLY_UIA_OK = true;\r\n\r\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\r\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\r\n\r\n\r\n// Table with utf8 lengths (calculated by first byte of sequence)\r\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\r\n// because max possible codepoint is 0x10ffff\r\nvar _utf8len = new utils.Buf8(256);\r\nfor (var q = 0; q < 256; q++) {\r\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\r\n}\r\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\r\n\r\n\r\n// convert string to array (typed, when possible)\r\nexports.string2buf = function (str) {\r\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\r\n\r\n  // count binary size\r\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\r\n  }\r\n\r\n  // allocate buffer\r\n  buf = new utils.Buf8(buf_len);\r\n\r\n  // convert\r\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    if (c < 0x80) {\r\n      /* one byte */\r\n      buf[i++] = c;\r\n    } else if (c < 0x800) {\r\n      /* two bytes */\r\n      buf[i++] = 0xC0 | (c >>> 6);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else if (c < 0x10000) {\r\n      /* three bytes */\r\n      buf[i++] = 0xE0 | (c >>> 12);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else {\r\n      /* four bytes */\r\n      buf[i++] = 0xf0 | (c >>> 18);\r\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    }\r\n  }\r\n\r\n  return buf;\r\n};\r\n\r\n// Helper (used in 2 places)\r\nfunction buf2binstring(buf, len) {\r\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\r\n  // If the length of the buffer is smaller than that, we can use this optimization,\r\n  // otherwise we will take a slower path.\r\n  if (len < 65534) {\r\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\r\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\r\n    }\r\n  }\r\n\r\n  var result = '';\r\n  for (var i = 0; i < len; i++) {\r\n    result += String.fromCharCode(buf[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n\r\n// Convert byte array to binary string\r\nexports.buf2binstring = function (buf) {\r\n  return buf2binstring(buf, buf.length);\r\n};\r\n\r\n\r\n// Convert binary string (typed, when possible)\r\nexports.binstring2buf = function (str) {\r\n  var buf = new utils.Buf8(str.length);\r\n  for (var i = 0, len = buf.length; i < len; i++) {\r\n    buf[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n};\r\n\r\n\r\n// convert array to string\r\nexports.buf2string = function (buf, max) {\r\n  var i, out, c, c_len;\r\n  var len = max || buf.length;\r\n\r\n  // Reserve max possible length (2 words per char)\r\n  // NB: by unknown reasons, Array is significantly faster for\r\n  //     String.fromCharCode.apply than Uint16Array.\r\n  var utf16buf = new Array(len * 2);\r\n\r\n  for (out = 0, i = 0; i < len;) {\r\n    c = buf[i++];\r\n    // quick process ascii\r\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\r\n\r\n    c_len = _utf8len[c];\r\n    // skip 5 & 6 byte codes\r\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\r\n\r\n    // apply mask on first byte\r\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\r\n    // join the rest\r\n    while (c_len > 1 && i < len) {\r\n      c = (c << 6) | (buf[i++] & 0x3f);\r\n      c_len--;\r\n    }\r\n\r\n    // terminated by end of string?\r\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\r\n\r\n    if (c < 0x10000) {\r\n      utf16buf[out++] = c;\r\n    } else {\r\n      c -= 0x10000;\r\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\r\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\r\n    }\r\n  }\r\n\r\n  return buf2binstring(utf16buf, out);\r\n};\r\n\r\n\r\n// Calculate max possible position in utf8 buffer,\r\n// that will not break sequence. If that's not possible\r\n// - (very small limits) return max size as is.\r\n//\r\n// buf[] - utf8 bytes array\r\n// max   - length limit (mandatory);\r\nexports.utf8border = function (buf, max) {\r\n  var pos;\r\n\r\n  max = max || buf.length;\r\n  if (max > buf.length) { max = buf.length; }\r\n\r\n  // go back from last position, until start of sequence found\r\n  pos = max - 1;\r\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\r\n\r\n  // Very small and broken sequence,\r\n  // return max, because we should return something anyway.\r\n  if (pos < 0) { return max; }\r\n\r\n  // If we came to start of buffer - that means buffer is too small,\r\n  // return max too.\r\n  if (pos === 0) { return max; }\r\n\r\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/pako/lib/utils/strings.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}}],"sources":{"node_modules/pako/lib/utils/strings.js":"// String encode/decode helpers\r\n'use strict';\r\n\r\n\r\nvar utils = require('./common');\r\n\r\n\r\n// Quick check if we can use fast array to bin string conversion\r\n//\r\n// - apply(Array) can fail on Android 2.2\r\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\r\n//\r\nvar STR_APPLY_OK = true;\r\nvar STR_APPLY_UIA_OK = true;\r\n\r\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\r\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\r\n\r\n\r\n// Table with utf8 lengths (calculated by first byte of sequence)\r\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\r\n// because max possible codepoint is 0x10ffff\r\nvar _utf8len = new utils.Buf8(256);\r\nfor (var q = 0; q < 256; q++) {\r\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\r\n}\r\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\r\n\r\n\r\n// convert string to array (typed, when possible)\r\nexports.string2buf = function (str) {\r\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\r\n\r\n  // count binary size\r\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\r\n  }\r\n\r\n  // allocate buffer\r\n  buf = new utils.Buf8(buf_len);\r\n\r\n  // convert\r\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    if (c < 0x80) {\r\n      /* one byte */\r\n      buf[i++] = c;\r\n    } else if (c < 0x800) {\r\n      /* two bytes */\r\n      buf[i++] = 0xC0 | (c >>> 6);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else if (c < 0x10000) {\r\n      /* three bytes */\r\n      buf[i++] = 0xE0 | (c >>> 12);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else {\r\n      /* four bytes */\r\n      buf[i++] = 0xf0 | (c >>> 18);\r\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    }\r\n  }\r\n\r\n  return buf;\r\n};\r\n\r\n// Helper (used in 2 places)\r\nfunction buf2binstring(buf, len) {\r\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\r\n  // If the length of the buffer is smaller than that, we can use this optimization,\r\n  // otherwise we will take a slower path.\r\n  if (len < 65534) {\r\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\r\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\r\n    }\r\n  }\r\n\r\n  var result = '';\r\n  for (var i = 0; i < len; i++) {\r\n    result += String.fromCharCode(buf[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n\r\n// Convert byte array to binary string\r\nexports.buf2binstring = function (buf) {\r\n  return buf2binstring(buf, buf.length);\r\n};\r\n\r\n\r\n// Convert binary string (typed, when possible)\r\nexports.binstring2buf = function (str) {\r\n  var buf = new utils.Buf8(str.length);\r\n  for (var i = 0, len = buf.length; i < len; i++) {\r\n    buf[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n};\r\n\r\n\r\n// convert array to string\r\nexports.buf2string = function (buf, max) {\r\n  var i, out, c, c_len;\r\n  var len = max || buf.length;\r\n\r\n  // Reserve max possible length (2 words per char)\r\n  // NB: by unknown reasons, Array is significantly faster for\r\n  //     String.fromCharCode.apply than Uint16Array.\r\n  var utf16buf = new Array(len * 2);\r\n\r\n  for (out = 0, i = 0; i < len;) {\r\n    c = buf[i++];\r\n    // quick process ascii\r\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\r\n\r\n    c_len = _utf8len[c];\r\n    // skip 5 & 6 byte codes\r\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\r\n\r\n    // apply mask on first byte\r\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\r\n    // join the rest\r\n    while (c_len > 1 && i < len) {\r\n      c = (c << 6) | (buf[i++] & 0x3f);\r\n      c_len--;\r\n    }\r\n\r\n    // terminated by end of string?\r\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\r\n\r\n    if (c < 0x10000) {\r\n      utf16buf[out++] = c;\r\n    } else {\r\n      c -= 0x10000;\r\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\r\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\r\n    }\r\n  }\r\n\r\n  return buf2binstring(utf16buf, out);\r\n};\r\n\r\n\r\n// Calculate max possible position in utf8 buffer,\r\n// that will not break sequence. If that's not possible\r\n// - (very small limits) return max size as is.\r\n//\r\n// buf[] - utf8 bytes array\r\n// max   - length limit (mandatory);\r\nexports.utf8border = function (buf, max) {\r\n  var pos;\r\n\r\n  max = max || buf.length;\r\n  if (max > buf.length) { max = buf.length; }\r\n\r\n  // go back from last position, until start of sequence found\r\n  pos = max - 1;\r\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\r\n\r\n  // Very small and broken sequence,\r\n  // return max, because we should return something anyway.\r\n  if (pos < 0) { return max; }\r\n\r\n  // If we came to start of buffer - that means buffer is too small,\r\n  // return max too.\r\n  if (pos === 0) { return max; }\r\n\r\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\r\n};\r\n"},"lineCount":188}},"error":null,"hash":"aefac7ccf722616a4b3f7294d2a538e6","cacheData":{"env":{}}}