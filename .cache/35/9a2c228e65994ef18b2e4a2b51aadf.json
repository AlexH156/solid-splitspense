{"id":"node_modules/lodash/_baseClone.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1624384360482},{"name":"./_Stack","loc":{"line":1,"column":20},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_Stack.js"},{"name":"./_arrayEach","loc":{"line":2,"column":24},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_arrayEach.js"},{"name":"./_assignValue","loc":{"line":3,"column":26},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_assignValue.js"},{"name":"./_baseAssign","loc":{"line":4,"column":25},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseAssign.js"},{"name":"./_baseAssignIn","loc":{"line":5,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseAssignIn.js"},{"name":"./_cloneBuffer","loc":{"line":6,"column":26},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_cloneBuffer.js"},{"name":"./_copyArray","loc":{"line":7,"column":24},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_copyArray.js"},{"name":"./_copySymbols","loc":{"line":8,"column":26},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_copySymbols.js"},{"name":"./_copySymbolsIn","loc":{"line":9,"column":28},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_copySymbolsIn.js"},{"name":"./_getAllKeys","loc":{"line":10,"column":25},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_getAllKeys.js"},{"name":"./_getAllKeysIn","loc":{"line":11,"column":27},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_getAllKeysIn.js"},{"name":"./_getTag","loc":{"line":12,"column":21},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_getTag.js"},{"name":"./_initCloneArray","loc":{"line":13,"column":29},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_initCloneArray.js"},{"name":"./_initCloneByTag","loc":{"line":14,"column":29},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_initCloneByTag.js"},{"name":"./_initCloneObject","loc":{"line":15,"column":30},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_initCloneObject.js"},{"name":"./isArray","loc":{"line":16,"column":22},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\isArray.js"},{"name":"./isBuffer","loc":{"line":17,"column":23},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\isBuffer.js"},{"name":"./isMap","loc":{"line":18,"column":20},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\isMap.js"},{"name":"./isObject","loc":{"line":19,"column":23},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\isObject.js"},{"name":"./isSet","loc":{"line":20,"column":20},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\isSet.js"},{"name":"./keys","loc":{"line":21,"column":19},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\keys.js"},{"name":"./keysIn","loc":{"line":22,"column":21},"parent":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\_baseClone.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\lodash\\keysIn.js"}],"generated":{"js":"var Stack = require('./_Stack'),\r\n    arrayEach = require('./_arrayEach'),\r\n    assignValue = require('./_assignValue'),\r\n    baseAssign = require('./_baseAssign'),\r\n    baseAssignIn = require('./_baseAssignIn'),\r\n    cloneBuffer = require('./_cloneBuffer'),\r\n    copyArray = require('./_copyArray'),\r\n    copySymbols = require('./_copySymbols'),\r\n    copySymbolsIn = require('./_copySymbolsIn'),\r\n    getAllKeys = require('./_getAllKeys'),\r\n    getAllKeysIn = require('./_getAllKeysIn'),\r\n    getTag = require('./_getTag'),\r\n    initCloneArray = require('./_initCloneArray'),\r\n    initCloneByTag = require('./_initCloneByTag'),\r\n    initCloneObject = require('./_initCloneObject'),\r\n    isArray = require('./isArray'),\r\n    isBuffer = require('./isBuffer'),\r\n    isMap = require('./isMap'),\r\n    isObject = require('./isObject'),\r\n    isSet = require('./isSet'),\r\n    keys = require('./keys'),\r\n    keysIn = require('./keysIn');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_FLAT_FLAG = 2,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    objectTag = '[object Object]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\ncloneableTags[boolTag] = cloneableTags[dateTag] =\r\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\r\ncloneableTags[numberTag] = cloneableTags[objectTag] =\r\ncloneableTags[regexpTag] = cloneableTags[setTag] =\r\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\r\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\ncloneableTags[weakMapTag] = false;\r\n\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\r\n  var result,\r\n      isDeep = bitmask & CLONE_DEEP_FLAG,\r\n      isFlat = bitmask & CLONE_FLAT_FLAG,\r\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n  if (customizer) {\r\n    result = object ? customizer(value, key, object, stack) : customizer(value);\r\n  }\r\n  if (result !== undefined) {\r\n    return result;\r\n  }\r\n  if (!isObject(value)) {\r\n    return value;\r\n  }\r\n  var isArr = isArray(value);\r\n  if (isArr) {\r\n    result = initCloneArray(value);\r\n    if (!isDeep) {\r\n      return copyArray(value, result);\r\n    }\r\n  } else {\r\n    var tag = getTag(value),\r\n        isFunc = tag == funcTag || tag == genTag;\r\n\r\n    if (isBuffer(value)) {\r\n      return cloneBuffer(value, isDeep);\r\n    }\r\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\r\n      if (!isDeep) {\r\n        return isFlat\r\n          ? copySymbolsIn(value, baseAssignIn(result, value))\r\n          : copySymbols(value, baseAssign(result, value));\r\n      }\r\n    } else {\r\n      if (!cloneableTags[tag]) {\r\n        return object ? value : {};\r\n      }\r\n      result = initCloneByTag(value, tag, isDeep);\r\n    }\r\n  }\r\n  // Check for circular references and return its corresponding clone.\r\n  stack || (stack = new Stack);\r\n  var stacked = stack.get(value);\r\n  if (stacked) {\r\n    return stacked;\r\n  }\r\n  stack.set(value, result);\r\n\r\n  if (isSet(value)) {\r\n    value.forEach(function(subValue) {\r\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n    });\r\n  } else if (isMap(value)) {\r\n    value.forEach(function(subValue, key) {\r\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n    });\r\n  }\r\n\r\n  var keysFunc = isFull\r\n    ? (isFlat ? getAllKeysIn : getAllKeys)\r\n    : (isFlat ? keysIn : keys);\r\n\r\n  var props = isArr ? undefined : keysFunc(value);\r\n  arrayEach(props || value, function(subValue, key) {\r\n    if (props) {\r\n      key = subValue;\r\n      subValue = value[key];\r\n    }\r\n    // Recursively populate clone (susceptible to call stack limits).\r\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n  });\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseClone;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseClone.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/lodash/_baseClone.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}}],"sources":{"node_modules/lodash/_baseClone.js":"var Stack = require('./_Stack'),\r\n    arrayEach = require('./_arrayEach'),\r\n    assignValue = require('./_assignValue'),\r\n    baseAssign = require('./_baseAssign'),\r\n    baseAssignIn = require('./_baseAssignIn'),\r\n    cloneBuffer = require('./_cloneBuffer'),\r\n    copyArray = require('./_copyArray'),\r\n    copySymbols = require('./_copySymbols'),\r\n    copySymbolsIn = require('./_copySymbolsIn'),\r\n    getAllKeys = require('./_getAllKeys'),\r\n    getAllKeysIn = require('./_getAllKeysIn'),\r\n    getTag = require('./_getTag'),\r\n    initCloneArray = require('./_initCloneArray'),\r\n    initCloneByTag = require('./_initCloneByTag'),\r\n    initCloneObject = require('./_initCloneObject'),\r\n    isArray = require('./isArray'),\r\n    isBuffer = require('./isBuffer'),\r\n    isMap = require('./isMap'),\r\n    isObject = require('./isObject'),\r\n    isSet = require('./isSet'),\r\n    keys = require('./keys'),\r\n    keysIn = require('./keysIn');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_FLAT_FLAG = 2,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/** `Object#toString` result references. */\r\nvar argsTag = '[object Arguments]',\r\n    arrayTag = '[object Array]',\r\n    boolTag = '[object Boolean]',\r\n    dateTag = '[object Date]',\r\n    errorTag = '[object Error]',\r\n    funcTag = '[object Function]',\r\n    genTag = '[object GeneratorFunction]',\r\n    mapTag = '[object Map]',\r\n    numberTag = '[object Number]',\r\n    objectTag = '[object Object]',\r\n    regexpTag = '[object RegExp]',\r\n    setTag = '[object Set]',\r\n    stringTag = '[object String]',\r\n    symbolTag = '[object Symbol]',\r\n    weakMapTag = '[object WeakMap]';\r\n\r\nvar arrayBufferTag = '[object ArrayBuffer]',\r\n    dataViewTag = '[object DataView]',\r\n    float32Tag = '[object Float32Array]',\r\n    float64Tag = '[object Float64Array]',\r\n    int8Tag = '[object Int8Array]',\r\n    int16Tag = '[object Int16Array]',\r\n    int32Tag = '[object Int32Array]',\r\n    uint8Tag = '[object Uint8Array]',\r\n    uint8ClampedTag = '[object Uint8ClampedArray]',\r\n    uint16Tag = '[object Uint16Array]',\r\n    uint32Tag = '[object Uint32Array]';\r\n\r\n/** Used to identify `toStringTag` values supported by `_.clone`. */\r\nvar cloneableTags = {};\r\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\r\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\r\ncloneableTags[boolTag] = cloneableTags[dateTag] =\r\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\r\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\r\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\r\ncloneableTags[numberTag] = cloneableTags[objectTag] =\r\ncloneableTags[regexpTag] = cloneableTags[setTag] =\r\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\r\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\r\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\r\ncloneableTags[errorTag] = cloneableTags[funcTag] =\r\ncloneableTags[weakMapTag] = false;\r\n\r\n/**\r\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\r\n * traversed objects.\r\n *\r\n * @private\r\n * @param {*} value The value to clone.\r\n * @param {boolean} bitmask The bitmask flags.\r\n *  1 - Deep clone\r\n *  2 - Flatten inherited properties\r\n *  4 - Clone symbols\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @param {string} [key] The key of `value`.\r\n * @param {Object} [object] The parent object of `value`.\r\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\r\n * @returns {*} Returns the cloned value.\r\n */\r\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\r\n  var result,\r\n      isDeep = bitmask & CLONE_DEEP_FLAG,\r\n      isFlat = bitmask & CLONE_FLAT_FLAG,\r\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\r\n\r\n  if (customizer) {\r\n    result = object ? customizer(value, key, object, stack) : customizer(value);\r\n  }\r\n  if (result !== undefined) {\r\n    return result;\r\n  }\r\n  if (!isObject(value)) {\r\n    return value;\r\n  }\r\n  var isArr = isArray(value);\r\n  if (isArr) {\r\n    result = initCloneArray(value);\r\n    if (!isDeep) {\r\n      return copyArray(value, result);\r\n    }\r\n  } else {\r\n    var tag = getTag(value),\r\n        isFunc = tag == funcTag || tag == genTag;\r\n\r\n    if (isBuffer(value)) {\r\n      return cloneBuffer(value, isDeep);\r\n    }\r\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\r\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\r\n      if (!isDeep) {\r\n        return isFlat\r\n          ? copySymbolsIn(value, baseAssignIn(result, value))\r\n          : copySymbols(value, baseAssign(result, value));\r\n      }\r\n    } else {\r\n      if (!cloneableTags[tag]) {\r\n        return object ? value : {};\r\n      }\r\n      result = initCloneByTag(value, tag, isDeep);\r\n    }\r\n  }\r\n  // Check for circular references and return its corresponding clone.\r\n  stack || (stack = new Stack);\r\n  var stacked = stack.get(value);\r\n  if (stacked) {\r\n    return stacked;\r\n  }\r\n  stack.set(value, result);\r\n\r\n  if (isSet(value)) {\r\n    value.forEach(function(subValue) {\r\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\r\n    });\r\n  } else if (isMap(value)) {\r\n    value.forEach(function(subValue, key) {\r\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n    });\r\n  }\r\n\r\n  var keysFunc = isFull\r\n    ? (isFlat ? getAllKeysIn : getAllKeys)\r\n    : (isFlat ? keysIn : keys);\r\n\r\n  var props = isArr ? undefined : keysFunc(value);\r\n  arrayEach(props || value, function(subValue, key) {\r\n    if (props) {\r\n      key = subValue;\r\n      subValue = value[key];\r\n    }\r\n    // Recursively populate clone (susceptible to call stack limits).\r\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\r\n  });\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseClone;\r\n"},"lineCount":167}},"error":null,"hash":"0319aa0b9483279d5e89772e429ceff4","cacheData":{"env":{}}}