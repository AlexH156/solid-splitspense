{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/login/AggregateLoginHandler.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\login\\AggregateLoginHandler.js.map","includedInParent":true,"mtime":499162500000},{"name":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\login\\AggregateLoginHandler.ts","includedInParent":true,"mtime":499162500000},{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624616921109},{"name":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1624616909589},{"name":"@inrupt/solid-client-authn-core","loc":{"line":3,"column":42},"parent":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\login\\AggregateLoginHandler.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst solid_client_authn_core_1 = require(\"@inrupt/solid-client-authn-core\");\nclass AggregateLoginHandler extends solid_client_authn_core_1.AggregateHandler {\n    constructor(loginHandlers) {\n        super(loginHandlers);\n    }\n}\nexports.default = AggregateLoginHandler;\n"},"sourceMaps":{"js":{"version":3,"file":"AggregateLoginHandler.js","sourceRoot":"","sources":["../../src/login/AggregateLoginHandler.ts"],"names":[],"mappings":";;AA6BA,6EAKyC;AAKzC,MAAqB,qBACnB,SAAQ,0CAA8C;IAGtD,YAAY,aAA8B;QACxC,KAAK,CAAC,aAAa,CAAC,CAAC;IACvB,CAAC;CACF;AAPD,wCAOC","sourcesContent":["/*\n * Copyright 2021 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @hidden\n * @packageDocumentation\n */\n\n/**\n * Responsible for decided which Login Handler should be used given the Login Options\n */\nimport {\n  ILoginHandler,\n  ILoginOptions,\n  AggregateHandler,\n  LoginResult,\n} from \"@inrupt/solid-client-authn-core\";\n\n/**\n * @hidden\n */\nexport default class AggregateLoginHandler\n  extends AggregateHandler<[ILoginOptions], LoginResult>\n  implements ILoginHandler\n{\n  constructor(loginHandlers: ILoginHandler[]) {\n    super(loginHandlers);\n  }\n}\n"]}},"error":null,"hash":"64f40703037e31ef86f0c8af2ab4397d","cacheData":{"env":{}}}