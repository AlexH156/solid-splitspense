{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/authenticatedFetch/fetchFactory.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\authenticatedFetch\\fetchFactory.js.map","includedInParent":true,"mtime":1624384349176},{"name":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\authenticatedFetch\\fetchFactory.ts","includedInParent":true,"mtime":1624384349255},{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1624384349238},{"name":"@inrupt/oidc-client-ext","loc":{"line":4,"column":34},"parent":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\authenticatedFetch\\fetchFactory.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\@inrupt\\oidc-client-ext\\dist\\index.es.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.buildDpopFetch = exports.buildBearerFetch = void 0;\r\nconst oidc_client_ext_1 = require(\"@inrupt/oidc-client-ext\");\r\nfunction buildBearerFetch(authToken, _refreshToken) {\r\n    return (init, options) => {\r\n        return fetch(init, {\r\n            ...options,\r\n            credentials: \"include\",\r\n            headers: {\r\n                ...options === null || options === void 0 ? void 0 : options.headers,\r\n                Authorization: `Bearer ${authToken}`,\r\n            },\r\n        });\r\n    };\r\n}\r\nexports.buildBearerFetch = buildBearerFetch;\r\nasync function buildDpopFetchOptions(targetUrl, authToken, dpopKey, defaultOptions) {\r\n    var _a;\r\n    return {\r\n        ...defaultOptions,\r\n        headers: {\r\n            ...defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.headers,\r\n            Authorization: `DPoP ${authToken}`,\r\n            DPoP: await oidc_client_ext_1.createDpopHeader(targetUrl, (_a = defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.method) !== null && _a !== void 0 ? _a : \"get\", dpopKey),\r\n        },\r\n        credentials: \"include\",\r\n    };\r\n}\r\nfunction isExpectedAuthError(statusCode) {\r\n    return [401, 403].includes(statusCode);\r\n}\r\nasync function buildDpopFetch(authToken, _refreshToken, dpopKey) {\r\n    return async (url, options) => {\r\n        const response = await fetch(url, await buildDpopFetchOptions(url.toString(), authToken, dpopKey, options));\r\n        const failedButNotExpectedAuthError = !response.ok && !isExpectedAuthError(response.status);\r\n        const hasBeenRedirected = response.url !== url;\r\n        if (response.ok || failedButNotExpectedAuthError || !hasBeenRedirected) {\r\n            return response;\r\n        }\r\n        return fetch(response.url, await buildDpopFetchOptions(response.url, authToken, dpopKey, options));\r\n    };\r\n}\r\nexports.buildDpopFetch = buildDpopFetch;\r\n"},"sourceMaps":{"js":{"version":3,"file":"fetchFactory.js","sourceRoot":"","sources":["../../src/authenticatedFetch/fetchFactory.ts"],"names":[],"mappings":";;;AAsBA,6DAA2D;AAS3D,SAAgB,gBAAgB,CAC9B,SAAiB,EAGjB,aAAiC;IAEjC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAqB,EAAE;QAC1C,OAAO,KAAK,CAAC,IAAI,EAAE;YACjB,GAAG,OAAO;YACV,WAAW,EAAE,SAAS;YACtB,OAAO,EAAE;gBACP,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO;gBACnB,aAAa,EAAE,UAAU,SAAS,EAAE;aACrC;SACF,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAhBD,4CAgBC;AAED,KAAK,UAAU,qBAAqB,CAClC,SAAiB,EACjB,SAAiB,EACjB,OAAmB,EACnB,cAA4B;;IAE5B,OAAO;QACL,GAAG,cAAc;QACjB,OAAO,EAAE;YACP,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,OAAO;YAC1B,aAAa,EAAE,QAAQ,SAAS,EAAE;YAClC,IAAI,EAAE,MAAM,kCAAgB,CAC1B,SAAS,EACT,MAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,MAAM,mCAAI,KAAK,EAC/B,OAAO,CACR;SACF;QACD,WAAW,EAAE,SAAS;KACvB,CAAC;AACJ,CAAC;AAED,SAAS,mBAAmB,CAAC,UAAkB;IAI7C,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzC,CAAC;AASM,KAAK,UAAU,cAAc,CAClC,SAAiB,EAGjB,aAAiC,EACjC,OAAmB;IAEnB,OAAO,KAAK,EAAE,GAAG,EAAE,OAAO,EAAqB,EAAE;QAC/C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAC1B,GAAG,EACH,MAAM,qBAAqB,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CACzE,CAAC;QACF,MAAM,6BAA6B,GACjC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxD,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,KAAK,GAAG,CAAC;QAC/C,IAAI,QAAQ,CAAC,EAAE,IAAI,6BAA6B,IAAI,CAAC,iBAAiB,EAAE;YAGtE,OAAO,QAAQ,CAAC;SACjB;QAGD,OAAO,KAAK,CACV,QAAQ,CAAC,GAAG,EACZ,MAAM,qBAAqB,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CACvE,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AA3BD,wCA2BC","sourcesContent":["/*\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { JSONWebKey } from \"jose\";\r\nimport { createDpopHeader } from \"@inrupt/oidc-client-ext\";\r\n\r\n/**\r\n * @param authToken A bearer token.\r\n * @param _refreshToken An optional refresh token.\r\n * @returns A fetch function that adds an Authorization header with the provided\r\n * bearer token.\r\n * @hidden\r\n */\r\nexport function buildBearerFetch(\r\n  authToken: string,\r\n  // TODO: We need to push this refresh token into a wrapper around the fetch,\r\n  //  so dependent on that wrapper existing first!\r\n  _refreshToken: string | undefined\r\n): typeof fetch {\r\n  return (init, options): Promise<Response> => {\r\n    return fetch(init, {\r\n      ...options,\r\n      credentials: \"include\",\r\n      headers: {\r\n        ...options?.headers,\r\n        Authorization: `Bearer ${authToken}`,\r\n      },\r\n    });\r\n  };\r\n}\r\n\r\nasync function buildDpopFetchOptions(\r\n  targetUrl: string,\r\n  authToken: string,\r\n  dpopKey: JSONWebKey,\r\n  defaultOptions?: RequestInit\r\n): Promise<RequestInit> {\r\n  return {\r\n    ...defaultOptions,\r\n    headers: {\r\n      ...defaultOptions?.headers,\r\n      Authorization: `DPoP ${authToken}`,\r\n      DPoP: await createDpopHeader(\r\n        targetUrl,\r\n        defaultOptions?.method ?? \"get\",\r\n        dpopKey\r\n      ),\r\n    },\r\n    credentials: \"include\",\r\n  };\r\n}\r\n\r\nfunction isExpectedAuthError(statusCode: number): boolean {\r\n  // As per https://tools.ietf.org/html/rfc7235#section-3.1 and https://tools.ietf.org/html/rfc7235#section-3.1,\r\n  // a response failing because the provided credentials aren't accepted by the\r\n  // server can get a 401 or a 403 response.\r\n  return [401, 403].includes(statusCode);\r\n}\r\n\r\n/**\r\n * @param authToken a DPoP token.\r\n * @param _refreshToken An optional refresh token.\r\n * @param dpopKey The private key the token is bound to.\r\n * @returns A fetch function that adds an Authorization header with the provided\r\n * DPoP token, and adds a dpop header.\r\n */\r\nexport async function buildDpopFetch(\r\n  authToken: string,\r\n  // TODO: We need to push this refresh token into a wrapper around the fetch,\r\n  //  so dependent on that wrapper existing first!\r\n  _refreshToken: string | undefined,\r\n  dpopKey: JSONWebKey\r\n): Promise<typeof fetch> {\r\n  return async (url, options): Promise<Response> => {\r\n    const response = await fetch(\r\n      url,\r\n      await buildDpopFetchOptions(url.toString(), authToken, dpopKey, options)\r\n    );\r\n    const failedButNotExpectedAuthError =\r\n      !response.ok && !isExpectedAuthError(response.status);\r\n    const hasBeenRedirected = response.url !== url;\r\n    if (response.ok || failedButNotExpectedAuthError || !hasBeenRedirected) {\r\n      // If there hasn't been a redirection, or if there has been a non-auth related\r\n      // issue, it should be handled at the application level\r\n      return response;\r\n    }\r\n    // If the request failed for auth reasons, and has been redirected, we should\r\n    // replay it with a new DPoP token.\r\n    return fetch(\r\n      response.url,\r\n      await buildDpopFetchOptions(response.url, authToken, dpopKey, options)\r\n    );\r\n  };\r\n}\r\n"]}},"error":null,"hash":"11a91f6166b188faaa3b528da72b62de","cacheData":{"env":{}}}