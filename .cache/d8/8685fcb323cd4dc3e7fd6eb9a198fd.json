{"id":"node_modules/node-jose/lib/algorithms/ecdsa.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\package.json","includedInParent":true,"mtime":1624384360737},{"name":"./ec-util.js","loc":{"line":8,"column":21},"parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\ecdsa.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\ec-util.js"},{"name":"./helpers.js","loc":{"line":9,"column":22},"parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\ecdsa.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\helpers.js"},{"name":"./sha.js","loc":{"line":10,"column":18},"parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\ecdsa.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\sha.js"},{"name":"buffer","parent":"G:\\VSC\\mysolidapp\\node_modules\\node-jose\\lib\\algorithms\\ecdsa.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-libs-browser\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*!\r\n * algorithms/ecdsa.js - Elliptic Curve Digitial Signature Algorithms\r\n *\r\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\r\n */\r\n\"use strict\";\r\n\r\nvar ecUtil = require(\"./ec-util.js\"),\r\n    helpers = require(\"./helpers.js\"),\r\n    sha = require(\"./sha.js\");\r\n\r\nfunction idealCurve(hash) {\r\n  switch (hash) {\r\n    case \"SHA-256\":\r\n      return \"P-256\";\r\n    case \"SHA-384\":\r\n      return \"P-384\";\r\n    case \"SHA-512\":\r\n      return \"P-521\";\r\n    default:\r\n      throw new Error(\"unsupported hash: \" + hash);\r\n  }\r\n}\r\n\r\nfunction ecdsaSignFN(hash) {\r\n  var curve = idealCurve(hash);\r\n\r\n  // ### Fallback implementation -- uses forge\r\n  var fallback = function(key, pdata /*, props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToForge(key, false);\r\n\r\n    var promise;\r\n    // generate hash\r\n    promise = sha[hash].digest(pdata);\r\n    // sign hash\r\n    promise = promise.then(function(result) {\r\n      result = pk.sign(result);\r\n      result = Buffer.concat([result.r, result.s]);\r\n      return {\r\n        data: pdata,\r\n        mac: result\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  // ### WebCrypto API implementation\r\n  var webcrypto = function(key, pdata /*, props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToJWK(key, false);\r\n\r\n    var promise;\r\n    var alg = {\r\n      name: \"ECDSA\",\r\n      namedCurve: pk.crv,\r\n      hash: {\r\n        name: hash\r\n      }\r\n    };\r\n    promise = helpers.subtleCrypto.importKey(\"jwk\",\r\n                                             pk,\r\n                                             alg,\r\n                                             true,\r\n                                             [ \"sign\" ]);\r\n    promise = promise.then(function(key) {\r\n      return helpers.subtleCrypto.sign(alg, key, pdata);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      result = Buffer.from(result);\r\n      return {\r\n        data: pdata,\r\n        mac: result\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  var nodejs;\r\n  var nodeHash = hash.toLowerCase().replace(\"-\", \"\");\r\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\r\n    nodejs = function(key, pdata) {\r\n      if (curve !== key.crv) {\r\n        return Promise.reject(new Error(\"invalid curve\"));\r\n      }\r\n\r\n      var promise;\r\n      promise = Promise.resolve(helpers.nodeCrypto.createSign(nodeHash));\r\n      promise = promise.then(function (sign) {\r\n        sign.update(pdata);\r\n        return sign;\r\n      });\r\n\r\n      var size;\r\n\r\n      switch (nodeHash.slice(-3)) {\r\n        case \"384\":\r\n          size = 48;\r\n          break;\r\n        case \"512\":\r\n          size = 66;\r\n          break;\r\n        default:\r\n          size = 32;\r\n      }\r\n\r\n      promise = promise.then(function (sign) {\r\n        return ecUtil.derToConcat(sign.sign(ecUtil.convertToPEM(key, true)), size);\r\n      });\r\n\r\n      promise = promise.then(function (result) {\r\n        return {\r\n          data: pdata,\r\n          mac: result\r\n        };\r\n      });\r\n\r\n      return promise;\r\n    };\r\n  }\r\n\r\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\r\n}\r\n\r\nfunction ecdsaVerifyFN(hash) {\r\n  var curve = idealCurve(hash);\r\n\r\n  // ### Fallback implementation -- uses forge\r\n  var fallback = function(key, pdata, mac /*, props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToForge(key, true);\r\n\r\n    var promise;\r\n    // generate hash\r\n    promise = sha[hash].digest(pdata);\r\n    // verify hash\r\n    promise = promise.then(function(result) {\r\n      var len = mac.length / 2;\r\n      var rs = {\r\n        r: mac.slice(0, len),\r\n        s: mac.slice(len)\r\n      };\r\n      if (!pk.verify(result, rs)) {\r\n        return Promise.reject(new Error(\"verification failed\"));\r\n      }\r\n      return {\r\n        data: pdata,\r\n        mac: mac,\r\n        valid: true\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  // ### WebCrypto API implementation\r\n  var webcrypto = function(key, pdata, mac /* , props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToJWK(key, true);\r\n\r\n    var promise;\r\n    var alg = {\r\n      name: \"ECDSA\",\r\n      namedCurve: pk.crv,\r\n      hash: {\r\n        name: hash\r\n      }\r\n    };\r\n    promise = helpers.subtleCrypto.importKey(\"jwk\",\r\n                                             pk,\r\n                                             alg,\r\n                                             true,\r\n                                             [\"verify\"]);\r\n    promise = promise.then(function(key) {\r\n      return helpers.subtleCrypto.verify(alg, key, mac, pdata);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      if (!result) {\r\n        return Promise.reject(new Error(\"verification failed\"));\r\n      }\r\n      return {\r\n        data: pdata,\r\n        mac: mac,\r\n        valid: true\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  var nodejs;\r\n  var nodeHash = hash.toLowerCase().replace(\"-\", \"\");\r\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\r\n    nodejs = function(key, pdata, mac /* , props */) {\r\n      if (curve !== key.crv) {\r\n        return Promise.reject(new Error(\"invalid curve\"));\r\n      }\r\n\r\n      var size;\r\n      switch (nodeHash.slice(-3)) {\r\n        case \"384\":\r\n          size = 48;\r\n          break;\r\n        case \"512\":\r\n          size = 66;\r\n          break;\r\n        default:\r\n          size = 32;\r\n      }\r\n\r\n      var promise;\r\n      promise = Promise.resolve(helpers.nodeCrypto.createVerify(nodeHash));\r\n      promise = promise.then(function (verify) {\r\n        verify.update(pdata);\r\n        verify.end();\r\n        return verify.verify(ecUtil.convertToPEM(key, false), ecUtil.concatToDer(mac, size));\r\n      });\r\n      promise = promise.then(function (result) {\r\n        if (!result) {\r\n          throw new Error(\"verification failed\");\r\n        }\r\n        return {\r\n          data: pdata,\r\n          mac: mac,\r\n          valid: true\r\n        };\r\n      });\r\n\r\n      return promise;\r\n    };\r\n  }\r\n\r\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\r\n}\r\n\r\n// ### Public API\r\nvar ecdsa = {};\r\n\r\n// * [name].sign\r\n// * [name].verify\r\n[\r\n  \"ES256\",\r\n  \"ES384\",\r\n  \"ES512\"\r\n].forEach(function(name) {\r\n  var hash = name.replace(/ES(\\d+)/g, function(m, size) {\r\n    return \"SHA-\" + size;\r\n  });\r\n  ecdsa[name] = {\r\n    sign: ecdsaSignFN(hash),\r\n    verify: ecdsaVerifyFN(hash)\r\n  };\r\n});\r\n\r\nmodule.exports = ecdsa;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/node-jose/lib/algorithms/ecdsa.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}}],"sources":{"node_modules/node-jose/lib/algorithms/ecdsa.js":"/*!\r\n * algorithms/ecdsa.js - Elliptic Curve Digitial Signature Algorithms\r\n *\r\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\r\n */\r\n\"use strict\";\r\n\r\nvar ecUtil = require(\"./ec-util.js\"),\r\n    helpers = require(\"./helpers.js\"),\r\n    sha = require(\"./sha.js\");\r\n\r\nfunction idealCurve(hash) {\r\n  switch (hash) {\r\n    case \"SHA-256\":\r\n      return \"P-256\";\r\n    case \"SHA-384\":\r\n      return \"P-384\";\r\n    case \"SHA-512\":\r\n      return \"P-521\";\r\n    default:\r\n      throw new Error(\"unsupported hash: \" + hash);\r\n  }\r\n}\r\n\r\nfunction ecdsaSignFN(hash) {\r\n  var curve = idealCurve(hash);\r\n\r\n  // ### Fallback implementation -- uses forge\r\n  var fallback = function(key, pdata /*, props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToForge(key, false);\r\n\r\n    var promise;\r\n    // generate hash\r\n    promise = sha[hash].digest(pdata);\r\n    // sign hash\r\n    promise = promise.then(function(result) {\r\n      result = pk.sign(result);\r\n      result = Buffer.concat([result.r, result.s]);\r\n      return {\r\n        data: pdata,\r\n        mac: result\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  // ### WebCrypto API implementation\r\n  var webcrypto = function(key, pdata /*, props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToJWK(key, false);\r\n\r\n    var promise;\r\n    var alg = {\r\n      name: \"ECDSA\",\r\n      namedCurve: pk.crv,\r\n      hash: {\r\n        name: hash\r\n      }\r\n    };\r\n    promise = helpers.subtleCrypto.importKey(\"jwk\",\r\n                                             pk,\r\n                                             alg,\r\n                                             true,\r\n                                             [ \"sign\" ]);\r\n    promise = promise.then(function(key) {\r\n      return helpers.subtleCrypto.sign(alg, key, pdata);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      result = Buffer.from(result);\r\n      return {\r\n        data: pdata,\r\n        mac: result\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  var nodejs;\r\n  var nodeHash = hash.toLowerCase().replace(\"-\", \"\");\r\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\r\n    nodejs = function(key, pdata) {\r\n      if (curve !== key.crv) {\r\n        return Promise.reject(new Error(\"invalid curve\"));\r\n      }\r\n\r\n      var promise;\r\n      promise = Promise.resolve(helpers.nodeCrypto.createSign(nodeHash));\r\n      promise = promise.then(function (sign) {\r\n        sign.update(pdata);\r\n        return sign;\r\n      });\r\n\r\n      var size;\r\n\r\n      switch (nodeHash.slice(-3)) {\r\n        case \"384\":\r\n          size = 48;\r\n          break;\r\n        case \"512\":\r\n          size = 66;\r\n          break;\r\n        default:\r\n          size = 32;\r\n      }\r\n\r\n      promise = promise.then(function (sign) {\r\n        return ecUtil.derToConcat(sign.sign(ecUtil.convertToPEM(key, true)), size);\r\n      });\r\n\r\n      promise = promise.then(function (result) {\r\n        return {\r\n          data: pdata,\r\n          mac: result\r\n        };\r\n      });\r\n\r\n      return promise;\r\n    };\r\n  }\r\n\r\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\r\n}\r\n\r\nfunction ecdsaVerifyFN(hash) {\r\n  var curve = idealCurve(hash);\r\n\r\n  // ### Fallback implementation -- uses forge\r\n  var fallback = function(key, pdata, mac /*, props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToForge(key, true);\r\n\r\n    var promise;\r\n    // generate hash\r\n    promise = sha[hash].digest(pdata);\r\n    // verify hash\r\n    promise = promise.then(function(result) {\r\n      var len = mac.length / 2;\r\n      var rs = {\r\n        r: mac.slice(0, len),\r\n        s: mac.slice(len)\r\n      };\r\n      if (!pk.verify(result, rs)) {\r\n        return Promise.reject(new Error(\"verification failed\"));\r\n      }\r\n      return {\r\n        data: pdata,\r\n        mac: mac,\r\n        valid: true\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  // ### WebCrypto API implementation\r\n  var webcrypto = function(key, pdata, mac /* , props */) {\r\n    if (curve !== key.crv) {\r\n      return Promise.reject(new Error(\"invalid curve\"));\r\n    }\r\n    var pk = ecUtil.convertToJWK(key, true);\r\n\r\n    var promise;\r\n    var alg = {\r\n      name: \"ECDSA\",\r\n      namedCurve: pk.crv,\r\n      hash: {\r\n        name: hash\r\n      }\r\n    };\r\n    promise = helpers.subtleCrypto.importKey(\"jwk\",\r\n                                             pk,\r\n                                             alg,\r\n                                             true,\r\n                                             [\"verify\"]);\r\n    promise = promise.then(function(key) {\r\n      return helpers.subtleCrypto.verify(alg, key, mac, pdata);\r\n    });\r\n    promise = promise.then(function(result) {\r\n      if (!result) {\r\n        return Promise.reject(new Error(\"verification failed\"));\r\n      }\r\n      return {\r\n        data: pdata,\r\n        mac: mac,\r\n        valid: true\r\n      };\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  var nodejs;\r\n  var nodeHash = hash.toLowerCase().replace(\"-\", \"\");\r\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\r\n    nodejs = function(key, pdata, mac /* , props */) {\r\n      if (curve !== key.crv) {\r\n        return Promise.reject(new Error(\"invalid curve\"));\r\n      }\r\n\r\n      var size;\r\n      switch (nodeHash.slice(-3)) {\r\n        case \"384\":\r\n          size = 48;\r\n          break;\r\n        case \"512\":\r\n          size = 66;\r\n          break;\r\n        default:\r\n          size = 32;\r\n      }\r\n\r\n      var promise;\r\n      promise = Promise.resolve(helpers.nodeCrypto.createVerify(nodeHash));\r\n      promise = promise.then(function (verify) {\r\n        verify.update(pdata);\r\n        verify.end();\r\n        return verify.verify(ecUtil.convertToPEM(key, false), ecUtil.concatToDer(mac, size));\r\n      });\r\n      promise = promise.then(function (result) {\r\n        if (!result) {\r\n          throw new Error(\"verification failed\");\r\n        }\r\n        return {\r\n          data: pdata,\r\n          mac: mac,\r\n          valid: true\r\n        };\r\n      });\r\n\r\n      return promise;\r\n    };\r\n  }\r\n\r\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\r\n}\r\n\r\n// ### Public API\r\nvar ecdsa = {};\r\n\r\n// * [name].sign\r\n// * [name].verify\r\n[\r\n  \"ES256\",\r\n  \"ES384\",\r\n  \"ES512\"\r\n].forEach(function(name) {\r\n  var hash = name.replace(/ES(\\d+)/g, function(m, size) {\r\n    return \"SHA-\" + size;\r\n  });\r\n  ecdsa[name] = {\r\n    sign: ecdsaSignFN(hash),\r\n    verify: ecdsaVerifyFN(hash)\r\n  };\r\n});\r\n\r\nmodule.exports = ecdsa;\r\n"},"lineCount":263}},"error":null,"hash":"0a51f1731dc7aaa651f19ea1f37b7495","cacheData":{"env":{}}}