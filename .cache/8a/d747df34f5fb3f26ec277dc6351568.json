{"id":"node_modules/buffer-equal-constant-time/index.js","dependencies":[{"name":"G:\\VSC\\mysolidapp\\package.json","includedInParent":true,"mtime":1624384368825},{"name":"G:\\VSC\\mysolidapp\\node_modules\\buffer-equal-constant-time\\package.json","includedInParent":true,"mtime":1624384352275},{"name":"buffer","loc":{"line":4,"column":25},"parent":"G:\\VSC\\mysolidapp\\node_modules\\buffer-equal-constant-time\\index.js","resolved":"G:\\VSC\\mysolidapp\\node_modules\\node-libs-browser\\node_modules\\buffer\\index.js"}],"generated":{"js":"\n/*jshint node:true */\r\n'use strict';\r\nvar Buffer = require('buffer').Buffer; // browserify\r\nvar SlowBuffer = require('buffer').SlowBuffer;\r\n\r\nmodule.exports = bufferEq;\r\n\r\nfunction bufferEq(a, b) {\r\n\r\n  // shortcutting on type is necessary for correctness\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    return false;\r\n  }\r\n\r\n  // buffer sizes should be well-known information, so despite this\r\n  // shortcutting, it doesn't leak any information about the *contents* of the\r\n  // buffers.\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n\r\n  var c = 0;\r\n  for (var i = 0; i < a.length; i++) {\r\n    /*jshint bitwise:false */\r\n    c |= a[i] ^ b[i]; // XOR\r\n  }\r\n  return c === 0;\r\n}\r\n\r\nbufferEq.install = function() {\r\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\r\n    return bufferEq(this, that);\r\n  };\r\n};\r\n\r\nvar origBufEqual = Buffer.prototype.equal;\r\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\r\nbufferEq.restore = function() {\r\n  Buffer.prototype.equal = origBufEqual;\r\n  SlowBuffer.prototype.equal = origSlowBufEqual;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/buffer-equal-constant-time/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/buffer-equal-constant-time/index.js":"/*jshint node:true */\r\n'use strict';\r\nvar Buffer = require('buffer').Buffer; // browserify\r\nvar SlowBuffer = require('buffer').SlowBuffer;\r\n\r\nmodule.exports = bufferEq;\r\n\r\nfunction bufferEq(a, b) {\r\n\r\n  // shortcutting on type is necessary for correctness\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    return false;\r\n  }\r\n\r\n  // buffer sizes should be well-known information, so despite this\r\n  // shortcutting, it doesn't leak any information about the *contents* of the\r\n  // buffers.\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n\r\n  var c = 0;\r\n  for (var i = 0; i < a.length; i++) {\r\n    /*jshint bitwise:false */\r\n    c |= a[i] ^ b[i]; // XOR\r\n  }\r\n  return c === 0;\r\n}\r\n\r\nbufferEq.install = function() {\r\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\r\n    return bufferEq(this, that);\r\n  };\r\n};\r\n\r\nvar origBufEqual = Buffer.prototype.equal;\r\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\r\nbufferEq.restore = function() {\r\n  Buffer.prototype.equal = origBufEqual;\r\n  SlowBuffer.prototype.equal = origSlowBufEqual;\r\n};\r\n"},"lineCount":43}},"error":null,"hash":"56601e38af016fd5d2be2f2023c8f37c","cacheData":{"env":{}}}